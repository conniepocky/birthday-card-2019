["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.trace","~:imports",null,"~:requires",["^ ","~$interop","~$re-frame.interop","^:","^:","~$re-frame.loggers","^;"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$console","^;"],"~:defs",["^ ","~$reset-tracing!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",21,"~:arglists",["~#list",["~$quote",["^I",[[]]]]]],"^5","~$re-frame.trace/reset-tracing!","~:variadic",false,"^C","target/expo/re_frame/trace.cljc","^G",21,"~:method-params",["^I",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",10,"^F",10,"~:max-fixed-arity",0,"~:fn-var",true,"^H",["^I",["^J",["^I",[[]]]]]],"~$trace-cbs",["^ ","^5","~$re-frame.trace/trace-cbs","^C","target/expo/re_frame/trace.cljc","^D",21,"^E",1,"^F",21,"^G",15,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",21,"^E",6,"^F",21,"^G",15],"~:tag","~$any"],"~$register-trace-cb",["^ ","^A",null,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",23,"^E",7,"^F",23,"^G",24,"^H",["^I",["^J",["^I",[["~$key","~$f"]]]]],"~:doc","Registers a tracing callback function which will receive a collection of one or more traces.\n  Will replace an existing callback function if it shares the same key."],"^5","~$re-frame.trace/register-trace-cb","^L",false,"^C","target/expo/re_frame/trace.cljc","^G",24,"^M",["^I",[["^W","~$f"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",23,"^F",23,"^P",2,"^Q",true,"^H",["^I",["^J",["^I",[["^W","~$f"]]]]],"^X","Registers a tracing callback function which will receive a collection of one or more traces.\n  Will replace an existing callback function if it shares the same key."],"~$next-id",["^ ","^A",null,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",33,"^E",7,"^F",33,"^G",14,"^H",["^I",["^J",["^I",[[]]]]]],"^5","~$re-frame.trace/next-id","^L",false,"^C","target/expo/re_frame/trace.cljc","^G",14,"^M",["^I",[[]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",33,"^F",33,"^P",0,"^Q",true,"^H",["^I",["^J",["^I",[[]]]]]],"~$is-trace-enabled?",["^ ","^A",null,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",16,"^E",16,"^F",16,"^G",33,"^T","~$boolean","^H",["^I",["^J",["^I",[[]]]]],"^X","See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details"],"^5","~$re-frame.trace/is-trace-enabled?","^L",false,"^C","target/expo/re_frame/trace.cljc","^G",33,"^M",["^I",[[]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",16,"~:ret-tag","^11","^F",16,"^P",0,"^T","^11","^Q",true,"^H",["^I",["^J",["^I",[[]]]]],"^X","See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details"],"~$id",["^ ","^5","~$re-frame.trace/id","^C","target/expo/re_frame/trace.cljc","^D",7,"^E",1,"^F",7,"^G",8,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",7,"^E",6,"^F",7,"^G",8],"^T","^U"],"~$*current-trace*",["^ ","^5","~$re-frame.trace/*current-trace*","^C","target/expo/re_frame/trace.cljc","^D",8,"^E",1,"^F",8,"^G",31,"~:dynamic",true,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",8,"^E",16,"^F",8,"^G",31,"^18",true],"^T","~$clj-nil"],"~$remove-trace-cb",["^ ","^A",null,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",29,"^E",7,"^F",29,"^G",22,"^H",["^I",["^J",["^I",[["^W"]]]]]],"^5","~$re-frame.trace/remove-trace-cb","^L",false,"^C","target/expo/re_frame/trace.cljc","^G",22,"^M",["^I",[["^W"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",29,"^F",29,"^P",1,"^Q",true,"^H",["^I",["^J",["^I",[["^W"]]]]]],"~$start-trace",["^ ","^A",null,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",35,"^E",7,"^F",35,"^G",18,"^H",["^I",["^J",["^I",[[["^ ","~:keys",["~$operation","~$op-type","~$tags","~$child-of"]]]]]]]],"^5","~$re-frame.trace/start-trace","^L",false,"^C","target/expo/re_frame/trace.cljc","^G",18,"^M",["^I",[["~$p__24637"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",35,"^F",35,"^P",1,"^Q",true,"^H",["^I",["^J",["^I",[[["^ ","^1=",["^1>","^1?","^1@","^1A"]]]]]]]],"~$trace-enabled?",["^ ","^5","~$re-frame.trace/trace-enabled?","^C","target/expo/re_frame/trace.cljc","^D",13,"^E",10,"^F",13,"^G",37,"^T","^11","~:declared",true,"^B",["^ ","^C","/home/connie/Desktop/clojure/mums-app/target/expo/re_frame/trace.cljc","^D",13,"^E",23,"^F",13,"^G",37,"^T","^11","^1F",true]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:tags","~:child-of","~:operation","~:start","~:id","~:op-type"]],"~:order",["^1M","^1P","^1K","^1L","^1O","^1N"]],"^X","Tracing for re-frame.\n  Alpha quality, subject to change/break at any time."]